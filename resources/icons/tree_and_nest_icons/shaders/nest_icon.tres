[gd_resource type="VisualShader" load_steps=10 format=3 uid="uid://nm0p66e2xank"]

[sub_resource type="VisualShaderNodeIf" id="VisualShaderNodeIf_wkqct"]
default_input_values = [0, 0.0, 1, 6.0, 2, 1e-05, 3, Vector3(0, 0, 0), 4, Vector3(0, 0, 0), 5, Vector3(18, -12, 0)]

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_73jvq"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(0, 0)]
op_type = 0

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_jjpy4"]
expanded_output_ports = [0]
input_name = "vertex"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_2gugk"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(5, 5)]
op_type = 0

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_rmj17"]
input_name = "time"

[sub_resource type="VisualShaderNodeVectorCompose" id="VisualShaderNodeVectorCompose_db015"]

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_g7d7b"]
function = 0

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_ky8bl"]
default_input_values = [0, 0.0, 1, 2.0]
operator = 2

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_h5kg1"]
default_input_values = [0, 0.0, 1, 2.0]
operator = 2

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;




void vertex() {
// Input:2
	vec2 n_out2p0 = VERTEX;
	float n_out2p1 = n_out2p0.r;
	float n_out2p2 = n_out2p0.g;


	vec3 n_out10p0;
// If:10
	float n_in10p1 = 6.00000;
	float n_in10p2 = 0.00001;
	vec3 n_in10p3 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_in10p4 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_in10p5 = vec3(18.00000, -12.00000, 0.00000);
	if(abs(n_out2p1 - n_in10p1) < n_in10p2)
	{
		n_out10p0 = n_in10p3;
	}
	else if(n_out2p1 < n_in10p1)
	{
		n_out10p0 = n_in10p5;
	}
	else
	{
		n_out10p0 = n_in10p4;
	}


// VectorOp:3
	vec2 n_out3p0 = vec2(n_out2p2) + vec2(n_out10p0.xy);


// Input:5
	float n_out5p0 = TIME;


// FloatOp:9
	float n_in9p1 = 2.00000;
	float n_out9p0 = n_out5p0 * n_in9p1;


// FloatFunc:7
	float n_out7p0 = sin(n_out9p0);


// FloatOp:8
	float n_in8p1 = 2.00000;
	float n_out8p0 = n_out7p0 * n_in8p1;


// VectorCompose:6
	float n_in6p1 = 0.00000;
	float n_in6p2 = 0.00000;
	vec3 n_out6p0 = vec3(n_out8p0, n_in6p1, n_in6p2);


// VectorOp:11
	vec2 n_out11p0 = n_out3p0 + vec2(n_out6p0.xy);


// Output:0
	VERTEX = n_out11p0;


}
"
mode = 1
flags/light_only = false
nodes/vertex/0/position = Vector2(580, 100)
nodes/vertex/2/node = SubResource("VisualShaderNodeInput_jjpy4")
nodes/vertex/2/position = Vector2(-660, 100)
nodes/vertex/3/node = SubResource("VisualShaderNodeVectorOp_2gugk")
nodes/vertex/3/position = Vector2(-100, 100)
nodes/vertex/5/node = SubResource("VisualShaderNodeInput_rmj17")
nodes/vertex/5/position = Vector2(-1000, 380)
nodes/vertex/6/node = SubResource("VisualShaderNodeVectorCompose_db015")
nodes/vertex/6/position = Vector2(-60, 380)
nodes/vertex/7/node = SubResource("VisualShaderNodeFloatFunc_g7d7b")
nodes/vertex/7/position = Vector2(-500, 380)
nodes/vertex/8/node = SubResource("VisualShaderNodeFloatOp_ky8bl")
nodes/vertex/8/position = Vector2(-260, 380)
nodes/vertex/9/node = SubResource("VisualShaderNodeFloatOp_h5kg1")
nodes/vertex/9/position = Vector2(-700, 380)
nodes/vertex/10/node = SubResource("VisualShaderNodeIf_wkqct")
nodes/vertex/10/position = Vector2(-320, 100)
nodes/vertex/11/node = SubResource("VisualShaderNodeVectorOp_73jvq")
nodes/vertex/11/position = Vector2(200, 120)
nodes/vertex/connections = PackedInt32Array(7, 0, 8, 0, 8, 0, 6, 0, 5, 0, 9, 0, 9, 0, 7, 0, 2, 1, 10, 0, 10, 0, 3, 1, 2, 2, 3, 0, 11, 0, 0, 0, 3, 0, 11, 0, 6, 0, 11, 1)
